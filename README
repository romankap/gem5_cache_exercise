This repo is a slightly modified version of the gem5 simulator.
Modification includes cache miss latency histogram statistics gathering.

In addition, the repo contains a script to plot and compare between L2 latencies of several of ARM's SE benchmarks.
The comparison per benchmark: With and without a last-level cache of L2 or L3.
The script uses a modified arm/starter_se example configuration, with small modifications to ARM's HPI processor.

Script's path: scripts/compare_benchmarks.py

************************************************************************************
Script usage: compare_benchmarks.py [-h] [--bm_names  [...]] [--show_plots] [--execute_bm]

Choose whether to execute a benchmark or only compare between last-level cache of L2 vs L3.
Comparison can be only printing L2 average latencies, or add latency histogram plots to be opened in new browser tabs.

optional arguments:
  -h, --help          show this help message and exit
  --bm_names  [ ...]  Choose which benchmark to execute or compare: IntMM, Quicksort, Oscar, Bubblesort, FloatMM, Queens, Towers, Treesort or all.
  --show_plots        If the argument is used, histogram plots will be displayed (will open in new browser tabs).
  --execute_bm        If the argument is used, benchmarks will be executed before comparison. Note that execution duration may be long.

************************************************************************************
Script usage examples:
    # Execute IntMM and Oscar benchmarks, then plot L2 latencies histograms and output average L2 latencies.
    python3 scripts/compare_benchmarks.py --execute_bm --bm_names IntMM Oscar

    # Plot L2 latencies histograms and output average L2 latencies for all benchmarks.
    python3 scripts/compare_benchmarks.py --bm_names all

************************************************************************************
Required python packages: pandas, plotly, argparse.